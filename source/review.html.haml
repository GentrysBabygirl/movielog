---
---
:ruby
  review = Movielog.reviews[review.sequence]
  content_for(:title, "#{review.display_title} Movie Review")
  aka_titles = MovieDb.aka_titles_for_title(db: Movielog.db, title: review.title)
  viewings = Movielog.viewings_for_title(title: review.title)
  headline_cast = MovieDb.headline_cast_for_title(db: Movielog.db, title: review.title)
  directors = MovieDb.directors_for_title(db: Movielog.db, title: review.title)
  director_slug = directors.map { |d| "<span class='name'>#{d.first_name} #{d.last_name}</span>" }.to_sentence
  writers = MovieDb.writers_for_title(db: Movielog.db, title: review.title)
  content_for(
    :description,
    description_for_review(review: review, aka_titles: aka_titles, headline_cast: headline_cast))

%article.review{ itemscope: true, itemtype: 'http://schema.org/Review' }
  %h1.page-title{ itemprop: 'name' }= review.display_title

  - if aka_titles.any?
    %dl.review-aka-list
      %dt.review-aka-list-heading aka
      - aka_titles.each do |aka_title|
        %dd.review-aka-list-item= aka_title unless aka_title == review.display_title

  .review-directed-by Directed by #{director_slug}

  .review-rating{ itemprop: 'reviewRating', itemscope: true, itemtype: 'http://schema.org/Rating' }
    %meta{ content: (Movielog::ConvertGradeToNumber.call(grade: review.grade) / 3.0) * 2.0,
           itemprop: 'ratingValue' }
    %meta{ content: '1', itemprop: 'worstRating' }
    %meta{ content: '10', itemprop: 'bestRating' }
    = grade_to_image(grade: review.grade, css_class: '')
  .post-content{ itemprop: 'reviewBody'}
    = markdown(review.content)
  %meta{ content: review.date.iso8601, itemprop: 'datepublished'}
  %span{ itemprop: 'author', itemscope: true, itemtype: 'http://schema.org/Person' }
    %meta{ content: 'Frank Showalter', itemprop: 'name' }
  .column-half
    %h3.review-viewings-list-header Viewings
    %ol.review-viewings-list
      - viewings.each_with_index do |viewing, index|
        %li.review-viewings-list-item{ value: index + 1 }
          = viewing.date.strftime("%A  %B #{viewing.date.day.ordinalize}, %Y")
          %span.role= " via #{viewing.venue}"
  .column-half
    %div{ itemprop: 'itemReviewed', itemscope: true, itemtype: 'http://schema.org/Movie' }
      %meta{ content: review.display_title, itemprop: 'name' }
      %h3.review-credits-list-header Directed by
      %ul.review-credits-list
        - directors.each do |director|
          %li.review-credits-list-item
            #{director.first_name} #{director.last_name}
            - unless director.notes.blank?
              %span.role
                = " #{director.notes}"
      %h3.review-credits-list-header Starring
      %ul.review-credits-list
        - headline_cast.each do |performer|
          %li.review-credits-list-item{ itemprop: 'actor',
                                itemscope: true,
                                itemtype: 'http://schema.org/Person' }
            %span{ itemprop: 'name' }
              #{performer.first_name} #{performer.last_name}
              %span.role
                = " as #{performer.role}"
      %h3.review-credits-list-header Written by
      %ul.review-credits-list
        - writers.each do |writer|
          %li.review-credits-list-item
            #{writer.first_name} #{writer.last_name}
            %span.role
              = " #{writer.notes}"

    %p.review-imdb-link
      More at <a href="http://www.imdb.com/title/#{review.imdb_id}" data-no-instant >the IMDb</a>.