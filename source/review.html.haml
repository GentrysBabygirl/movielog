---
---
:ruby
  review = Movielog.reviews[review.sequence]
  content_for(:title, "#{review.display_title} Movie Review")
  aka_titles = MovieDb.aka_titles_for_title(db: Movielog.db, title: review.title, display_title: review.display_title)
  viewings = Movielog.viewings_for_title(title: review.title)
  headline_cast = MovieDb.headline_cast_for_title(db: Movielog.db, title: review.title)
  directors = MovieDb.directors_for_title(db: Movielog.db, title: review.title)
  director_slug = directors.map { |d| "#{d.first_name} #{d.last_name}" }.to_sentence

- content_for(:meta) do
  %meta{ name: 'description', content: description_for_review(review: review, aka_titles: aka_titles, headline_cast: headline_cast) }
  %meta{ name: 'twitter:card', content: 'summary_large_image' }
  %meta{ name: 'twitter:site', content: '@franksmovielog' }
  %meta{ name: 'twitter:title', content: review.display_title }
  %meta{ name: 'twitter:description', content: "(#{grade_to_unicode_stars(grade: review.grade)}) #{review.pull_quote}" }
  %meta{ name: 'twitter:image', content: review.backdrop }


%article.post{ itemscope: true, itemtype: 'http://schema.org/Review' }
  - if review.backdrop
    .post_backdrop{ data: { backdrop: review.backdrop } }

  %h1.post_title{ itemprop: 'name' }= review.display_title

  - if aka_titles.any?
    %dl.review_aka_list
      %dt.review_aka_list-heading aka
      - aka_titles.each do |aka_title|
        %dd.review_aka_list-item= aka_title unless aka_title == review.display_title

  .review_directed_by Directed by #{director_slug}

  .review_rating{ itemprop: 'reviewRating', itemscope: true, itemtype: 'http://schema.org/Rating' }
    %meta{ content: Movielog::ConvertGradeToNumber.call(grade: review.grade) / 3.0,
           itemprop: 'ratingValue' }
    %meta{ content: '0', itemprop: 'worstRating' }
    %meta{ content: '5', itemprop: 'bestRating' }
    = grade_to_image_tag(grade: review.grade)

  .post_content{ itemprop: 'reviewBody' }
    = markdown(review.content)
  %meta{ content: review.date.iso8601, itemprop: 'datepublished'}
  %span{ itemprop: 'author', itemscope: true, itemtype: 'http://schema.org/Person' }
    %meta{ content: 'Frank Showalter', itemprop: 'name' }
  %p.post_slug
    = "<span>#{review.display_title}</span> was reviewed on #{review.date.strftime('%b %-d, %Y')}. "
    = "I've seen it "
    %a{ href: "/viewings/?title=#{URI.escape(review.display_title)}", data: { no_instant: true } }
      = "#{pluralize(viewings.length, 'time')}. "
    = "More at the "
    %a{ href: "http://www.imdb.com/title/#{review.imdb_id}", data: { no_instant: true} } 
      IMDb
    = "."

- content_for(:footer) do
  = partial(:recent_posts, locals: { current_post: review })

