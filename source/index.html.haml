---
pagination:
  for: posts
  per_page: 10
  path: page/:num/index
---
:ruby
  posts = Movielog.posts
  unless pagination.page_num == 1
    content_for(:title, "Page - #{pagination.page_num}")
  end
- content_for(:header) do
  Latest Updates
%ol.latest-updates-list
  - pagination.each do |key|
    - post = posts[key]
    - if post.is_a?(Movielog::Review)
      - review = post
      - directors = MovieDb.directors_for_title(db: Movielog.db, title: review.title)
      %li.latest-updates-list-item{ value: post.sequence }
        .latest-updates-list-item-date
          = post.date.strftime('%B %-d, %Y')
        %header.latest-updates-list-item-header
          %h2.latest-updates-list-item-title{ data: { number: post.sequence }}
            %a{ href: "/reviews/#{review.slug}/" }
              = "#{review.display_title} "
          .latest-updates-list-item-rating
            = grade_to_unicode_stars_as_html(grade: review.grade)
        .latest-updates-list-item-slug.with-rating
          %span.abbreviation
            = ' D'
          %span.full
            irected by
          = " #{directors.map { |d| "<span class='name'>#{d.first_name} #{d.last_name}</span>" }.to_sentence}. "
          %span.full
            Starring
          = " #{headline_cast(title: review.title)}."
        .latest-updates-list-item-pull-quote
          = markdown(review.pull_quote)
    - elsif post.is_a?(Movielog::Feature)
      - feature = post
      %li.latest-updates-list-item{ value: post.sequence }
        .latest-updates-list-item-date
          = post.date.strftime('%B %-d, %Y')
        %header.latest-updates-list-item-header
          %h2.latest-updates-list-item-title{ data: { number: post.sequence }}
            %a.latest-updates-list-item-link{ href: "/features/#{feature.slug}/" }
              = feature.title
        .latest-updates-list-item-pull-quote
          = feature.pull_quote
.pagination
  - if pagination.prev_page
    %a.pagination-item.newer{ href: pagination.prev_page.url }
      %svg.pagination-icon{ viewBox: '-704 -384 2048 2048', xmlns: 'http://www.w3.org/2000/svg' }
        %g{ transform: 'scale(1 -1) translate(0 -1280)' }
          %path{ d: 'M627 992q0 -13 -10 -23l-393 -393l393 -393q10 -10 10 -23t-10 -23l-50 -50q-10 -10 -23 -10t-23 10l-466 466q-10 10 -10 23t10 23l466 466q10 10 23 10t23 -10l50 -50q10 -10 10 -23z',
                 fill: 'black' }
      Newer

  - if pagination.next_page
    %a.pagination-item.older{ href: pagination.next_page.url }
      Older
      %svg.pagination-icon{ viewBox: '-704 -384 2048 2048', xmlns: 'http://www.w3.org/2000/svg' }
        %g{ transform: 'scale(1 -1) translate(0 -1280)' }
          %path{ d: 'M595 576q0 -13 -10 -23l-466 -466q-10 -10 -23 -10t-23 10l-50 50q-10 10 -10 23t10 23l393 393l-393 393q-10 10 -10 23t10 23l50 50q10 10 23 10t23 -10l466 -466q10 -10 10 -23z',
                 fill: 'black' }